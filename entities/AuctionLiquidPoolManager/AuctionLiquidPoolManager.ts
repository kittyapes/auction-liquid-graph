// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get owner_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool_(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get is721_(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AuctionLiquidPoolManager__createPoolInputParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nft(): Address {
    return this[2].toAddress();
  }

  get lockPeriod(): BigInt {
    return this[3].toBigInt();
  }

  get duration(): BigInt {
    return this[4].toBigInt();
  }

  get tokenIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get isLinear(): boolean {
    return this[6].toBoolean();
  }

  get delta(): BigInt {
    return this[7].toBigInt();
  }

  get ratio(): BigInt {
    return this[8].toBigInt();
  }

  get randomFee(): i32 {
    return this[9].toI32();
  }

  get tradingFee(): i32 {
    return this[10].toI32();
  }

  get startPrice(): BigInt {
    return this[11].toBigInt();
  }

  get feeTypes(): Array<i32> {
    return this[12].toI32Array();
  }

  get feeValues(): Array<i32> {
    return this[13].toI32Array();
  }
}

export class AuctionLiquidPoolManager extends ethereum.SmartContract {
  static bind(address: Address): AuctionLiquidPoolManager {
    return new AuctionLiquidPoolManager("AuctionLiquidPoolManager", address);
  }

  createPool(
    params: AuctionLiquidPoolManager__createPoolInputParamsStruct
  ): Address {
    let result = super.call(
      "createPool",
      "createPool((string,address,address,uint64,uint64,uint256[],bool,uint256,uint256,uint16,uint16,uint256,uint8[],uint16[])):(address)",
      [ethereum.Value.fromTuple(params)]
    );

    return result[0].toAddress();
  }

  try_createPool(
    params: AuctionLiquidPoolManager__createPoolInputParamsStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createPool",
      "createPool((string,address,address,uint64,uint64,uint256[],bool,uint256,uint256,uint16,uint16,uint256,uint8[],uint16[])):(address)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dexToken(): Address {
    let result = super.call("dexToken", "dexToken():(address)", []);

    return result[0].toAddress();
  }

  try_dexToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("dexToken", "dexToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mTokenTemplate(): Address {
    let result = super.call("mTokenTemplate", "mTokenTemplate():(address)", []);

    return result[0].toAddress();
  }

  try_mTokenTemplate(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mTokenTemplate",
      "mTokenTemplate():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pool1155Template(): Address {
    let result = super.call(
      "pool1155Template",
      "pool1155Template():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pool1155Template(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pool1155Template",
      "pool1155Template():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pool721Template(): Address {
    let result = super.call(
      "pool721Template",
      "pool721Template():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pool721Template(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pool721Template",
      "pool721Template():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pools(param0: BigInt): Address {
    let result = super.call("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get params(): CreatePoolCallParamsStruct {
    return changetype<CreatePoolCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get poolAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreatePoolCallParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nft(): Address {
    return this[2].toAddress();
  }

  get lockPeriod(): BigInt {
    return this[3].toBigInt();
  }

  get duration(): BigInt {
    return this[4].toBigInt();
  }

  get tokenIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get isLinear(): boolean {
    return this[6].toBoolean();
  }

  get delta(): BigInt {
    return this[7].toBigInt();
  }

  get ratio(): BigInt {
    return this[8].toBigInt();
  }

  get randomFee(): i32 {
    return this[9].toI32();
  }

  get tradingFee(): i32 {
    return this[10].toI32();
  }

  get startPrice(): BigInt {
    return this[11].toBigInt();
  }

  get feeTypes(): Array<i32> {
    return this[12].toI32Array();
  }

  get feeValues(): Array<i32> {
    return this[13].toI32Array();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDexTokenCall extends ethereum.Call {
  get inputs(): SetDexTokenCall__Inputs {
    return new SetDexTokenCall__Inputs(this);
  }

  get outputs(): SetDexTokenCall__Outputs {
    return new SetDexTokenCall__Outputs(this);
  }
}

export class SetDexTokenCall__Inputs {
  _call: SetDexTokenCall;

  constructor(call: SetDexTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDexTokenCall__Outputs {
  _call: SetDexTokenCall;

  constructor(call: SetDexTokenCall) {
    this._call = call;
  }
}

export class SetPool1155TemplateCall extends ethereum.Call {
  get inputs(): SetPool1155TemplateCall__Inputs {
    return new SetPool1155TemplateCall__Inputs(this);
  }

  get outputs(): SetPool1155TemplateCall__Outputs {
    return new SetPool1155TemplateCall__Outputs(this);
  }
}

export class SetPool1155TemplateCall__Inputs {
  _call: SetPool1155TemplateCall;

  constructor(call: SetPool1155TemplateCall) {
    this._call = call;
  }

  get poolTemplate_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPool1155TemplateCall__Outputs {
  _call: SetPool1155TemplateCall;

  constructor(call: SetPool1155TemplateCall) {
    this._call = call;
  }
}

export class SetPool721TemplateCall extends ethereum.Call {
  get inputs(): SetPool721TemplateCall__Inputs {
    return new SetPool721TemplateCall__Inputs(this);
  }

  get outputs(): SetPool721TemplateCall__Outputs {
    return new SetPool721TemplateCall__Outputs(this);
  }
}

export class SetPool721TemplateCall__Inputs {
  _call: SetPool721TemplateCall;

  constructor(call: SetPool721TemplateCall) {
    this._call = call;
  }

  get poolTemplate_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPool721TemplateCall__Outputs {
  _call: SetPool721TemplateCall;

  constructor(call: SetPool721TemplateCall) {
    this._call = call;
  }
}

export class SetTokenTemplateCall extends ethereum.Call {
  get inputs(): SetTokenTemplateCall__Inputs {
    return new SetTokenTemplateCall__Inputs(this);
  }

  get outputs(): SetTokenTemplateCall__Outputs {
    return new SetTokenTemplateCall__Outputs(this);
  }
}

export class SetTokenTemplateCall__Inputs {
  _call: SetTokenTemplateCall;

  constructor(call: SetTokenTemplateCall) {
    this._call = call;
  }

  get tokenTemplate_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenTemplateCall__Outputs {
  _call: SetTokenTemplateCall;

  constructor(call: SetTokenTemplateCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get treasury_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
